swagger: '2.0'
info:
  version: "1.0.0"
  title: "MongooseIM's domain management REST API"
  description: |
    Explore MongooseIM features using our REST API.

    Please keep in mind that all requests require authentication. This is to make sure the server can identify who sent the request and if it comes from an authorized user.
    Currently the only supported method is **Basic Auth**.

basePath: /api
schemes:
  - http
produces:
  - application/json
consumes:
  - application/json
host: "localhost:8088"
paths:
  /domains/{domain}:
    put:
      description: Adds a domain.
      tags:
        - "Dynamic domains"
      parameters:
        - in: path
          name: domain
          required: true
          type: string
        - in: body
          name: host_type
          description: The host type of the domain.
          required: true
          schema:
            title: host_type
            type: object
            properties:
              host_type:
                example: "type1"
                type: string
      responses:
        204:
          description: Domain was successfully inserted.
        400:
          description: Bad request.
          examples:
            application/json: {"what": "body is empty"}
        409:
          description: Domain already exists with a different host type.
          examples:
            application/json: {"what": "duplicate"}
        403:
          description: DB service disabled, or the host type is unknown.
          examples:
            application/json: {"what": "domain is static"}
        500:
          description: Other errors.
          examples:
            application/json: {"what": "database error"}
    patch:
      description: Enables/disables a domain.
      tags:
        - "Dynamic domains"
      parameters:
        - in: path
          name: domain
          required: true
          type: string
        - in: body
          name: enabled
          description: Whether to enable or to disable a domain.
          required: true
          schema:
            title: Enabled
            type: object
            properties:
              enabled:
                example: true
                type: boolean
      responses:
        204:
          description: Domain was successfully updated.
        404:
          description: Domain not found.
          examples:
            application/json: {"what": "domain not found"}
        403:
          description: Domain is static, or the service is disabled.
          examples:
            application/json: {"what": "domain is static"}
        500:
          description: Other errors.
          examples:
            application/json: {"what": "database error"}
    get:
      description: Returns information about the domain.
      tags:
        - "Dynamic domains"
      parameters:
        - name: domain
          type: string
          in: path
          required: true
      responses:
        200:
          description: Successful response.
        404:
          description: Domain not found.
          examples:
            application/json: {"what": "domain not found"}
    delete:
      description: "Removes a domain"
      tags:
        - "Dynamic domains"
      parameters:
        - in: path
          name: domain
          required: true
          type: string
        - in: body
          name: host_type
          description: The host type of the domain.
          required: true
          schema:
            title: host_type
            type: object
            properties:
              host_type:
                example: "type1"
                type: string
      responses:
        204:
          description: "The domain is removed or not found."
        403:
          description: |
            One of:
              * the domain is static.
              * the DB service is disabled.
              * the host type is wrong (does not match the host type in the database).
              * the host type is unknown.
          examples:
            application/json: {"what": "unknown host type"}
        500:
          description: "Other errors."
          examples:
            application/json: {"what": "database error"}
